name: Publish on pnpm Update

on:
  schedule:
    - cron: '0 0 * * *' # Runs every day at midnight
  workflow_dispatch:

jobs:
  check-and-publish:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'

      - name: Fetch latest pnpm version
        id: pnpm_version
        run: echo "::set-output name=version::$(npm show pnpm version)"

      - name: Get previous pnpm version
        id: previous_version
        run: echo "::set-output name=version::$(cat .pnpm_version || echo 'none')"

      - name: Compare versions
        id: compare_versions
        run: |
          if [ "${{ steps.pnpm_version.outputs.version }}" != "${{ steps.previous_version.outputs.version }}" ]; then
            echo "::set-output name=update::true"
          else
            echo "::set-output name=update::false"
          fi

      - name: Update pnpm version file
        if: steps.compare_versions.outputs.update == 'true'
        run: echo "${{ steps.pnpm_version.outputs.version }}" > .pnpm_version

      - name: Commit version update
        if: steps.compare_versions.outputs.update == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .pnpm_version
          git commit -m "Update pnpm to version ${{ steps.pnpm_version.outputs.version }}"
          git push

      - name: Build Docker image
        if: steps.compare_versions.outputs.update == 'true'
        run: |
          docker build --build-arg PNPM_VERSION=${{ steps.pnpm_version.outputs.version }} -t joyja/pnpm-dev:${{ steps.pnpm_version.outputs.version }} .
      
      - name: Log in to Docker Hub
        if: steps.compare_versions.outputs.update == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        if: steps.compare_versions.outputs.update == 'true'
        run: docker push joyja/pnpm-dev:${{ steps.pnpm_version.outputs.version }}
